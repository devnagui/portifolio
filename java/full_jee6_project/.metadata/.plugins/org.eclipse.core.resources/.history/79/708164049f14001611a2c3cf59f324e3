package br.com.devnagui.project.entities;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.NamedQueries;
import org.hibernate.annotations.NamedQuery;

@Entity
@Table(name = "COMBUSTIVEL_VISITA", schema = "PROJECT")
@NamedQueries(value = { @NamedQuery(name = CombustivelVisita.CONSULTAR_COMBUSTIVEL_VISITA_POR_ID_VISITA, query = "Select cv from CombustivelVisita cv where cv.visita.id = :idVisita") })
public class CombustivelVisita implements Serializable {

	private static final long serialVersionUID = -9169780511062471727L;

	public static final String CONSULTAR_COMBUSTIVEL_VISITA_POR_ID_VISITA = "consultarCombustivelVisitaPorIdVisita";

	@Id
	@Column(name = "SEQ_COMBUSTIVEL_VISITA")
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "SQ_COMBUSTIVEL_VISITA")
	@SequenceGenerator(name = "SQ_COMBUSTIVEL_VISITA", sequenceName = "SQ_COMBUSTIVEL_VISITA", allocationSize = 1, initialValue = 1)
	private Long id;

	@ManyToOne
	@JoinColumn(name = "SEQ_VISITA")
	private Visita visita;

	@ManyToOne
	@JoinColumn(name = "SEQ_PRODUTO_COMBUSTIVEL")
	private ProdutoCombustivel produtoCombustivel;

	@Column(name = "VLR_PRECO_COMBUSTIVEL", precision = 6, scale = 3,columnDefinition="NUMBER(6,3)")
	private Double valor;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DAT_REGISTRO_COMBUSTIVEL")
	private Date dataRegistro;

	/**
	 * @return the id
	 */
	public Long getId() {
		return id;
	}

	/**
	 * @param id
	 *            the id to set
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * @return the visita
	 */
	public Visita getVisita() {
		return visita;
	}

	/**
	 * @param visita
	 *            the visita to set
	 */
	public void setVisita(Visita visita) {
		this.visita = visita;
	}

	/**
	 * @return the produtoCombustivel
	 */
	public ProdutoCombustivel getProdutoCombustivel() {
		return produtoCombustivel;
	}

	/**
	 * @param produtoCombustivel
	 *            the produtoCombustivel to set
	 */
	public void setProdutoCombustivel(ProdutoCombustivel produtoCombustivel) {
		this.produtoCombustivel = produtoCombustivel;
	}

	/**
	 * @return the valor
	 */
	public Double getValor() {
		return valor;
	}

	/**
	 * @param valor
	 *            the valor to set
	 */
	public void setValor(Double valor) {
		this.valor = valor;
	}

	/**
	 * @return the dataRegistro
	 */
	public Date getDataRegistro() {
		return dataRegistro;
	}

	/**
	 * @param dataRegistro
	 *            the dataRegistro to set
	 */
	public void setDataRegistro(Date dataRegistro) {
		this.dataRegistro = dataRegistro;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((dataRegistro == null) ? 0 : dataRegistro.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime
				* result
				+ ((produtoCombustivel == null) ? 0 : produtoCombustivel
						.hashCode());
		result = prime * result + ((valor == null) ? 0 : valor.hashCode());
		result = prime * result + ((visita == null) ? 0 : visita.hashCode());
		return result;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		CombustivelVisita other = (CombustivelVisita) obj;
		if (dataRegistro == null) {
			if (other.dataRegistro != null)
				return false;
		} else if (!dataRegistro.equals(other.dataRegistro))
			return false;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (produtoCombustivel == null) {
			if (other.produtoCombustivel != null)
				return false;
		} else if (!produtoCombustivel.equals(other.produtoCombustivel))
			return false;
		if (valor == null) {
			if (other.valor != null)
				return false;
		} else if (!valor.equals(other.valor))
			return false;
		if (visita == null) {
			if (other.visita != null)
				return false;
		} else if (!visita.equals(other.visita))
			return false;
		return true;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString() {
		return "CombustivelVisita [id=" + id + ", visita=" + visita
				+ ", produtoCombustivel=" + produtoCombustivel + ", valor="
				+ valor + ", dataRegistro=" + dataRegistro + "]";
	}

}
