package br.com.devnagui.project.importaranp;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.text.ParseException;
import java.util.List;

import junit.framework.Assert;

import org.apache.log4j.Logger;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.junit.Test;

import br.com.devnagui.project.dto.ArquivoDTO;
import br.com.devnagui.project.entities.Contribuinte;
import br.com.devnagui.project.manager.exception.BusinessException;
import br.com.devnagui.project.util.XLSImportUtil;

/**
 * 
 * @author 006158c3
 * 
 */
public class XLSImportUtilTest {

	@SuppressWarnings("unused")
	private static final Logger LOG = Logger.getLogger(XLSImportUtilTest.class);
	
	@Test
	public void testeLerXlS() throws InvalidFormatException, IOException, ParseException, BusinessException {
		File file = new File(getPathXLS());
		ArquivoDTO arquivoDTO = new ArquivoDTO();
		arquivoDTO.setName(file.getName());
		arquivoDTO.setLength(Integer.parseInt(String.valueOf(file.length())));
		arquivoDTO.setData(read(file));
		List<Contribuinte> contribuintesANP = XLSImportUtil.getInstance().importXLS(arquivoDTO);
		Assert.assertEquals(5, contribuintesANP.size());
	}
	
	@Test
	public void testeArquivoInvalido() throws InvalidFormatException, IOException, ParseException{
		File file = new File(getPathArquivoInvalido());
		ArquivoDTO arquivoDTO = new ArquivoDTO();
		arquivoDTO.setName(file.getName());
		arquivoDTO.setLength(Integer.parseInt(String.valueOf(file.length())));
		arquivoDTO.setData(read(file));
		try {
			XLSImportUtil.getInstance().importXLS(arquivoDTO);
		} catch (BusinessException e) {
			Assert.assertEquals("mensagem.importacao.arquivo.invalido", e.getMessage());
		}
	}
	
	@Test
	public void testarLayoutInvalidoCnpj() throws InvalidFormatException, IOException, ParseException {
		File file = new File(getPathLayoutInvalido());
		ArquivoDTO arquivoDTO = new ArquivoDTO();
		arquivoDTO.setName(file.getName());
		arquivoDTO.setLength(Integer.parseInt(String.valueOf(file.length())));
		arquivoDTO.setData(read(file));
		try {
			XLSImportUtil.getInstance().importXLS(arquivoDTO);
		} catch (BusinessException e) {
			Assert.assertEquals("mensagem.importacao.layout.invalido", e.getMessage());
		}
	}
	
	@Test
	public void testarLayoutInvalidoData() throws InvalidFormatException, IOException, ParseException {
		File file = new File(getPathLayoutInvalidoData());
		ArquivoDTO arquivoDTO = new ArquivoDTO();
		arquivoDTO.setName(file.getName());
		arquivoDTO.setLength(Integer.parseInt(String.valueOf(file.length())));
		arquivoDTO.setData(read(file));
		try {
			XLSImportUtil.getInstance().importXLS(arquivoDTO);
		} catch (BusinessException e) {
			Assert.assertEquals("mensagem.importacao.layout.invalido", e.getMessage());
		}
	}
	
	private String getPathXLS() {
		String PATH_XLS = System.getProperty("user.dir");
		return PATH_XLS + "\\src\\test\\resources/ANP.xls";
	}
	
	private String getPathArquivoInvalido() {
		String PATH_XLS = System.getProperty("user.dir");
		return PATH_XLS + "\\src\\test\\resources\\arquivoInvalido.txt";
	}
	
	private String getPathLayoutInvalido() {
		String PATH_XLS = System.getProperty("user.dir");
		return PATH_XLS + "\\src\\test\\resources\\ANP_LAYOUT_INVALIDO.xls";
	}

	private String getPathLayoutInvalidoData() {
		String PATH_XLS = System.getProperty("user.dir");
		return PATH_XLS + "\\src\\test\\resources\\ANP_LAYOUT_DATA_INVALIDO.xls";
	}

	private byte[] read(File file) throws IOException {
		byte[] buffer = new byte[(int) file.length()];
		InputStream ios = null;
		ios = new FileInputStream(file);
		ios.read(buffer);
		ios.close();
		return buffer;
	}
}
