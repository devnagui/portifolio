package br.gov.ce.sefaz.project.entities;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import br.gov.ce.sefaz.project.enums.SituacaoRegistroNFE;
import br.gov.ce.sefaz.project.enums.SituacaoVisita;


@Entity
@Table(name = "VISITA_NFE",schema="PROJECT")
@SequenceGenerator(name = "SQ_VISITA_NFE", sequenceName = "SQ_VISITA_NFE", allocationSize = 1, initialValue = 1)
@NamedQueries(value = {
		@NamedQuery(name = VisitaNfe.QUERY_REMOVER_VISITAS_NFE_POR_ID_VISITA, query = "Delete from VisitaNfe vn where vn.visita.id = :idVisita"),
		@NamedQuery(name = VisitaNfe.QUERY_REMOVER_VISITAS_NFE_POR_ID_VISITA_E_NFE, query = "Delete from VisitaNfe vn where vn.visita.id = :idVisita and vn.nfeEntrada.id=:idNota")})

public class VisitaNfe implements Serializable {
	
	private static final long serialVersionUID = -4074747013337534622L;

	public static final String QUERY_REMOVER_VISITAS_NFE_POR_ID_VISITA = "deletarVisitasNfePorIdVisita";
	public static final String QUERY_REMOVER_VISITAS_NFE_POR_ID_VISITA_E_NFE = "deletarVisitasNfePorIdVisitaENfe";

	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "SQ_VISITA_NFE")
	@Column(name = "SEQ_VISITA_NFE")
	private Long id;
	
	@Column(name = "STA_REGISTRO_NFE")
	@Enumerated(EnumType.ORDINAL)
	private SituacaoRegistroNFE situacaoVisitaNfe;
	
	@Column(name = "STA_NFE_VISITA")
	@Enumerated(EnumType.ORDINAL)
	private SituacaoVisita situacaoVisita;
	
	@ManyToOne
	@JoinColumn(name = "SEQ_VISITA")
	private Visita visita;
	
	@ManyToOne
	@JoinColumn(name = "SEQ_NFE_ENTRADA")
	private NFEEntrada nfeEntrada;

	/**
	 * @return the id
	 */
	public Long getId() {
		return id;
	}

	/**
	 * @param id 
	 * 				the id to set
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * @return the situacaoVisitaNfe
	 */
	public SituacaoRegistroNFE getSituacaoVisitaNfe() {
		return situacaoVisitaNfe;
	}

	/**
	 * @param situacaoVisitaNfe 
	 * 				the situacaoVisitaNfe to set
	 */
	public void setSituacaoVisitaNfe(SituacaoRegistroNFE situacaoVisitaNfe) {
		this.situacaoVisitaNfe = situacaoVisitaNfe;
	}

	/**
	 * @return the situacaoVisita
	 */
	public SituacaoVisita getSituacaoVisita() {
		return situacaoVisita;
	}

	/**
	 * @param situacaoVisita 
	 * 				the situacaoVisita to set
	 */
	public void setSituacaoVisita(SituacaoVisita situacaoVisita) {
		this.situacaoVisita = situacaoVisita;
	}

	/**
	 * @return the visita
	 */
	public Visita getVisita() {
		return visita;
	}

	/**
	 * @param visita 
	 * 				the visita to set
	 */
	public void setVisita(Visita visita) {
		this.visita = visita;
	}

	/**
	 * @return the nfeEntrada
	 */
	public NFEEntrada getNfeEntrada() {
		return nfeEntrada;
	}

	/**
	 * @param nfeEntrada 
	 * 				the nfeEntrada to set
	 */
	public void setNfeEntrada(NFEEntrada nfeEntrada) {
		this.nfeEntrada = nfeEntrada;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result
				+ ((nfeEntrada == null) ? 0 : nfeEntrada.hashCode());
		result = prime * result
				+ ((situacaoVisita == null) ? 0 : situacaoVisita.hashCode());
		result = prime
				* result
				+ ((situacaoVisitaNfe == null) ? 0 : situacaoVisitaNfe
						.hashCode());
		result = prime * result + ((visita == null) ? 0 : visita.hashCode());
		return result;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		VisitaNfe other = (VisitaNfe) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (nfeEntrada == null) {
			if (other.nfeEntrada != null)
				return false;
		} else if (!nfeEntrada.equals(other.nfeEntrada))
			return false;
		if (situacaoVisita != other.situacaoVisita)
			return false;
		if (situacaoVisitaNfe != other.situacaoVisitaNfe)
			return false;
		if (visita == null) {
			if (other.visita != null)
				return false;
		} else if (!visita.equals(other.visita))
			return false;
		return true;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString() {
		return "VisitaNfe [id=" + id + ", situacaoVisitaNfe="
				+ situacaoVisitaNfe + ", situacaoVisita=" + situacaoVisita
				+ ", visita=" + visita + ", nfeEntrada=" + nfeEntrada + "]";
	}

}
