package br.gov.ce.sefaz.project.entities;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

@Entity
@Table(name = "USUARIO", schema = "SISSEG")
@NamedQueries(value = {
		@NamedQuery(name = Usuario.QUERY_BUSCAR_USUARIOS_POR_MATRICULA, query = "select u from Usuario u where u.matricula like (:param) or u.nome like (:param) and u.matricula is not null "),
		@NamedQuery(name = Usuario.QUERY_BUSCAR_USUARIO_POR_MATRICULA_NOME, query = "select u from Usuario u where u.matricula = :matricula and UPPER(trim(u.nome)) = :nome"),
		@NamedQuery(name = Usuario.QUERY_BUSCAR_USUARIO_POR_MATRICULA_OU_NOME, query = "select u from Usuario u where u.matricula = :matricula or trim(u.nome) = :nome and u.matricula is not null") })
public class Usuario implements Serializable {

	/**
	 * Serial UID
	 */
	private static final long serialVersionUID = -108829748495775901L;

	public static final String QUERY_BUSCAR_USUARIOS_POR_MATRICULA = "buscarUsuariosPorMatricula";
	public static final String QUERY_BUSCAR_USUARIO_POR_MATRICULA_NOME = "buscarUsuarioPorMatriculaNome";
	public static final String QUERY_BUSCAR_USUARIO_POR_MATRICULA_OU_NOME = "buscarUsuarioPorMatriculaOuNome";

	@Id
	@Column(name = "SEQ_USUARIO", updatable = false, insertable = false)
	private Long id;

	@Column(name = "NOM_USUARIO", length = 50, updatable = false, insertable = false)
	@NotNull
	private String nome;

	@Column(name = "NUM_MATRICULA", length = 8, updatable = false, insertable = false, unique = true)
	@NotNull
	private String matricula;

	@Override
	public boolean equals(Object other) {
		if (this == other) {
			return true;
		}
		if (!(other instanceof Usuario)) {
			return false;
		}
		Usuario castOther = (Usuario) other;
		return (this.id == castOther.getId());
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int hash = 17;
		hash = (int) (hash * prime + this.id);

		return hash;
	}

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getNome() {
		// Necessário o trim(), pois, em alguns casos, a base está com espaços
		// adicionais.
		if (nome != null) {
			return nome.trim();
		}
		return nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	public String getMatricula() {
		// Necessário o trim(), pois, em alguns casos, a base está com espaços
		// adicionais.
		if (matricula != null) {
			return matricula.trim();
		}
		return matricula;
	}

	public void setMatricula(String matricula) {
		this.matricula = matricula;
	}
}
