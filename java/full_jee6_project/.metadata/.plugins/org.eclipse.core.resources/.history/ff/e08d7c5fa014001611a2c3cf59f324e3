# Defaults and other keys with explanations can be found there: http://unitils.org/unitils-default.properties
unitils.configuration.customFileName=unitils-default.properties
unitils.configuration.localFileName=unitils-default.properties
unitils.module.database.enabled=true
unitils.module.dbunit.enabled=true
unitils.module.hibernate.enabled=true
unitils.module.mock.enabled=true
unitils.module.easymock.enabled=true
unitils.module.inject.enabled=true
unitils.module.spring.enabled=true
unitils.module.jpa.enabled=true
unitils.modules=database,dbunit,hibernate,mock,easymock,inject,spring,jpa

unitils.module.database.className=org.unitils.database.DatabaseModule
unitils.module.database.runAfter=

unitils.module.hibernate.className=org.unitils.orm.hibernate.HibernateModule
unitils.module.hibernate.runAfter=

unitils.module.dbunit.className=org.unitils.dbunit.DbUnitModule
unitils.module.dbunit.runAfter=

unitils.module.mock.className=org.unitils.mock.MockModule
unitils.module.mock.runAfter=

unitils.module.easymock.className=org.unitils.easymock.EasyMockModule
unitils.module.easymock.runAfter=

unitils.module.inject.className=org.unitils.inject.InjectModule
unitils.module.inject.runAfter=

unitils.module.spring.className=org.unitils.spring.SpringModule
unitils.module.spring.runAfter=database

unitils.module.jpa.className=org.unitils.orm.jpa.JpaModule
unitils.module.jpa.runAfter=
### SpringModule configuration ###
SpringModule.applicationContextFactory.implClassName=org.unitils.spring.util.ClassPathXmlApplicationContextFactory
spring.core.someClass.name=org.springframework.core.io.Resource

InjectModule.TestedObject.createIfNull.enabled=true
InjectModule.InjectIntoStatic.restore.default=old_value
InjectModule.InjectIntoByType.propertyAccess.default=field
InjectModule.InjectIntoStaticByType.restore.default=old_value
InjectModule.InjectIntoStaticByType.propertyAccess.default=field

HibernateModule.configuration.implClassName=org.hibernate.cfg.AnnotationConfiguration
EasyMockModule.autoVerifyAfterTest.enabled=true
DatabaseModule.Transactional.value.default=commit
org.unitils.database.config.DataSourceFactory.implClassName=org.unitils.database.config.PropertiesDataSourceFactory
dataSource.wrapInTransactionalProxy=false
updateDataBaseSchema.enabled=false
dbMaintainer.autoCreateExecutedScriptsTable=false
dbMaintainer.script.locations=src/main/config/
#dbMaintainer.keepRetryingAfterError.enabled=false
#dbMaintainer.executedScriptsTableName=dbmaintain_scripts
dbMaintainer.fileNameColumnName=file_name
dbMaintainer.fileNameColumnSize=150
## Name of the column in which the version index string of the executed script is stored.
#dbMaintainer.versionColumnName=version
#dbMaintainer.versionColumnSize=25
## Name of the column in which the last modification date of the executed script file is stored.
#dbMaintainer.fileLastModifiedAtColumnName=file_last_modified_at
## Name of the column in which the checksum of the content of the script is stored.
#dbMaintainer.checksumColumnName=checksum
#dbMaintainer.checksumColumnSize=50
## Name of the column that stores the timestamp at which the script was executed
#dbMaintainer.executedAtColumnName=executed_at
#dbMaintainer.executedAtColumnSize=20
## Name of the column in which is stored whether the script ran without error or not.
#dbMaintainer.succeededColumnName=succeeded
## Set this property to true if the dbmaintain_scripts table should be created automatically if not found.
## If false, an exception is thrown when the table is not found, indicating how to create it manually. 
## This property is false by default to be sure that a database is cleared by accident. If an executed 
## scripts table is available, we assume it to be a database managed by dbmaintain.
dbMaintainer.timestampFormat=yyyy-MM-dd HH:mm:ss
#dbMaintainer.cleanDb.enabled=false
#dbMaintainer.fromScratch.enabled=false
#dbMaintainer.disableConstraints.enabled=false
#dbMaintainer.updateSequences.enabled=false
dbMaintainer.generateDataSetStructure.enabled=true
org.unitils.dbmaintainer.structure.DataSetStructureGenerator.implClassName=org.unitils.dbmaintainer.structure.impl.XsdDataSetStructureGenerator
database.url=jdbc:oracle:thin:@172.30.120.139:1521:xe
database.dialect=oracle
database.userName=PROJECT
database.password=project
database.schemaNames=PROJECT, CADASTRO, SETA, SISSEG
database.driverClassName=oracle.jdbc.driver.OracleDriver

# Determines how the database stores non-quoted identifiers (with identifiers, we mean names for tables, columns, etc.) 
# Possible values are lower_case, upper_case, mixed_case and auto
# If auto is specified, the database metadata is used to determine the correct value
database.storedIndentifierCase.oracle=auto
database.storedIndentifierCase.hsqldb=auto
database.storedIndentifierCase.mysql=auto
database.storedIndentifierCase.db2=auto
database.storedIndentifierCase.postgresql=auto
database.storedIndentifierCase.derby=auto
database.storedIndentifierCase.mssql=auto

# Determines the string the database uses to quote identifiers, i.e. make them case-sensitive 
# (with identifiers, we mean names for tables, columns, etc.)
# Leave empty if quoting is not supported.
# If auto is specified, the database metadata is used to determine the correct value
database.identifierQuoteString.oracle=auto
database.identifierQuoteString.hsqldb=auto
database.identifierQuoteString.mysql=auto
database.identifierQuoteString.db2=auto
database.identifierQuoteString.postgresql=auto
database.identifierQuoteString.derby=auto
database.identifierQuoteString.mssql=auto


#Default operation that is used for getting a dbunit dataset into the database. Should be the fully qualified classname
# of an implementation of org.unitils.dbunit.datasetloadstrategy.DataSetLoadStrategy
DbUnitModule.DataSet.loadStrategy.default=org.unitils.dbunit.datasetloadstrategy.impl.CleanInsertLoadStrategy
# Default factory that is used to create a dataset object from a file for the @DataSet annotation
DbUnitModule.DataSet.factory.default=org.unitils.dbunit.datasetfactory.impl.MultiSchemaXmlDataSetFactory
# Default factory that is used to create a dataset object from a file for the @ExpectedDataSet annotation
DbUnitModule.ExpectedDataSet.factory.default=org.unitils.dbunit.datasetfactory.impl.MultiSchemaXmlDataSetFactory

# Fully qualified classname of the data set resolver
org.unitils.dbunit.datasetfactory.DataSetResolver.implClassName=org.unitils.dbunit.datasetfactory.impl.DefaultDataSetResolver
# If set to true, the data set name will be prefixed with the package name of the test (with . replaced by /)
dbUnit.datasetresolver.prefixWithPackageName=true
# Optional prefix for the data set file name. If it starts with '/' it is treated as an absolute path on the
# file system, if not, it is treated as a classpath resource. 
dbUnit.datasetresolver.pathPrefix=

jpa.persistenceProvider=hibernate

sequenceUpdater.sequencevalue.lowestacceptable=10
#org.unitils.dbmaintainer.structure.DataSetStructureGenerator.implClassName=org.unitils.dbmaintainer.structure.impl.XsdDataSetStructureGenerator
# DbUnit data set dtd file path
dataSetStructureGenerator.dtd.filename=dataset
# Suffix to use when generating complex types for tables
dataSetStructureGenerator.xsd.complexTypeSuffix=__type
dataSetStructureGenerator.xsd.dirName=src/test/resources
#org.unitils.dbmaintainer.clean.DBClearer.implClassName=org.unitils.dbmaintainer.clean.impl.DefaultDBClearer
#org.unitils.dbmaintainer.clean.DBCleaner.implClassName=org.unitils.dbmaintainer.clean.impl.DefaultDBCleaner
#org.unitils.dbmaintainer.structure.SequenceUpdater.implClassName=org.unitils.dbmaintainer.structure.impl.DefaultSequenceUpdater
#org.unitils.dbmaintainer.structure.ConstraintsDisabler.implClassName=org.unitils.dbmaintainer.structure.impl.DefaultConstraintsDisabler
#org.unitils.dbmaintainer.version.ExecutedScriptInfoSource.implClassName=org.unitils.dbmaintainer.version.impl.DefaultExecutedScriptInfoSource
org.unitils.dbmaintainer.script.ScriptSource.implClassName=org.unitils.dbmaintainer.script.impl.DefaultScriptSource
org.unitils.dbmaintainer.script.ScriptRunner.implClassName=org.unitils.dbmaintainer.script.impl.DefaultScriptRunner

org.unitils.core.dbsupport.DbSupport.implClassName.oracle10=org.unitils.core.dbsupport.Oracle10DbSupport
org.unitils.core.dbsupport.DbSupport.implClassName.oracle=org.unitils.core.dbsupport.Oracle10DbSupport
org.unitils.core.dbsupport.DbSupport.implClassName.mysql=org.unitils.core.dbsupport.MySqlDbSupport
org.unitils.core.dbsupport.DbSupport.implClassName.postgres=org.unitils.core.dbsupport.MySqlDbSupport
org.unitils.core.dbsupport.DbSupport.implClassName.postgresql=org.unitils.core.dbsupport.PostgreSqlDbSupport

org.dbunit.dataset.datatype.IDataTypeFactory.implClassName.oracle=org.dbunit.ext.oracle.OracleDataTypeFactory
org.dbunit.dataset.datatype.IDataTypeFactory.implClassName.oracle9=org.dbunit.ext.oracle.OracleDataTypeFactory
org.dbunit.dataset.datatype.IDataTypeFactory.implClassName.oracle10=org.dbunit.ext.oracle.OracleDataTypeFactory
org.dbunit.dataset.datatype.IDataTypeFactory.implClassName.db2=org.dbunit.ext.db2.Db2DataTypeFactory
org.dbunit.dataset.datatype.IDataTypeFactory.implClassName.hsqldb=org.dbunit.ext.hsqldb.HsqldbDataTypeFactory
org.dbunit.dataset.datatype.IDataTypeFactory.implClassName.mysql=org.dbunit.ext.mysql.MySqlDataTypeFactory
org.dbunit.dataset.datatype.IDataTypeFactory.implClassName.postgresql=org.dbunit.dataset.datatype.DefaultDataTypeFactory

#org.dbunit.dataset.datatype.IDataTypeFactory.implClassName.derby=org.dbunit.dataset.datatype.DefaultDataTypeFactory
#org.dbunit.dataset.datatype.IDataTypeFactory.implClassName.mssql=org.dbunit.ext.mssql.MsSqlDataTypeFactory

org.unitils.database.transaction.UnitilsTransactionManager.implClassName=org.unitils.database.transaction.impl.DefaultUnitilsTransactionManager
org.unitils.orm.jpa.util.JpaProviderSupport.implClassName.hibernate=org.unitils.orm.jpa.util.provider.hibernate.HibernateJpaProviderSupport
