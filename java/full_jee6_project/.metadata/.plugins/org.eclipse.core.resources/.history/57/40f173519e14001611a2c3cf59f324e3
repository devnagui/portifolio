package br.com.devnagui.project.entities;

import java.io.Serializable;
import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

@Entity
@Table(name = "NFE_ENTRADA", schema = "PROJECT")
@NamedQueries(value = {
        @NamedQuery(name = NFEEntrada.QUERY_OBTER_NOTAS_FISCAIS_DO_POSTO, query = "select nfe from NFEEntrada nfe join nfe.itensInformados infe where infe.visita.postoCombustivel.id = :id"),
        @NamedQuery(name = NFEEntrada.QUERY_OBTER_NOTAS_FISCAIS_POR_CHAVE_ACESSO, query = "select nfe from NFEEntrada nfe where nfe.codAcesso =:codChaveAcesso ")})
public class NFEEntrada implements Serializable {
    public static final String QUERY_OBTER_NOTAS_FISCAIS_DO_POSTO = "obterNotasFiscaisDoPosto";
    
    public static final String QUERY_OBTER_NOTAS_FISCAIS_POR_CHAVE_ACESSO = "obterNotaFiscalPorChaveAcesso";

    /**
     * Serial UID.
     */
    private static final long serialVersionUID = -1008964218389285524L;

    @Id
    @Column(name = "SEQ_NFE_ENTRADA", nullable = false)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "SQ_NFE_ENTRADA")
    @SequenceGenerator(name = "SQ_NFE_ENTRADA", sequenceName = "SQ_NFE_ENTRADA", allocationSize = 1, initialValue = 1, schema = "PROJECT")
    private Long id;

    @Column(name="COD_CHAVE_ACESSO",length=44,nullable=false)
    private String codAcesso;

    @Transient
    private Long numDocFiscal;
   
    @Column(name="DAT_EMISSAO",nullable=false)
    private Date dataEmissao;
    
    @OneToMany(mappedBy="notaFiscal",cascade={CascadeType.REFRESH,CascadeType.REMOVE,CascadeType.DETACH})
    private List<ItemNFEEntrada> itensInformados;

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getCodAcesso() {
        return codAcesso;
    }

    public void setCodAcesso(String codAcesso) {
        this.codAcesso = codAcesso;
    }

    public Long getNumDocFiscal() {
        return numDocFiscal;
    }

    public void setNumDocFiscal(Long numDocFiscal) {
        this.numDocFiscal = numDocFiscal;
    }

    public Date getDataEmissao() {
        return dataEmissao;
    }

    public void setDataEmissao(Date dataEmissao) {
        this.dataEmissao = dataEmissao;
    }
    
    public List<ItemNFEEntrada> getItensInformados() {
        return itensInformados;
    }

    public void setItensInformados(List<ItemNFEEntrada> itensInformados) {
        this.itensInformados = itensInformados;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((id == null) ? 0 : id.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (!(obj instanceof NFEEntrada))
            return false;
        NFEEntrada other = (NFEEntrada) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        } else if (!id.equals(other.id))
            return false;
        return true;
    }
    
}
