package br.com.devnagui.project.entities;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * 
 * Criado por @author 006159C0 em 06/05/2013
 *
 */
@Entity
@Table(name = "ROTEIRO")
@SequenceGenerator(name = "SQ_ROTEITRO", sequenceName = "SQ_ROTEIRO", allocationSize = 1, initialValue = 1)
@NamedQueries(value = {
	@NamedQuery(name = Roteiro.QUERY_BUSCA_ROTEIRO_PELAS_DATAS_E_ROTA_VERSAO, query = "SELECT r FROM Roteiro r WHERE r.rotaVersao.id = :rotaVersao AND r.dataFim > :dataAtual AND ( r.dataInicial BETWEEN :dataInicio AND :dataFim OR r.dataFim BETWEEN :dataInicio AND :dataFim )"), 
	@NamedQuery(name = Roteiro.QUERY_BUSCA_ROTEIRO_POR_DATA_AUFERICAO, query = "select r from Roteiro r where :dataAufericao between r.dataInicial and r.dataFim"),
	@NamedQuery(name = Roteiro.QUERY_BUSCAR_ROTEIRO_POR_ID_FISCAL_DATA_AUFERICAO, query = "select r from Roteiro r where r.fiscal.id =:idFiscal and  :dataAufericao between r.dataInicial and r.dataFim")
})
public class Roteiro implements Serializable {

  
	/**
	 * Serial UID.
	 */
	private static final long serialVersionUID = 2255853252509557373L;
	
	public static final String QUERY_BUSCAR_ROTEIROS_POR_FISCAL = "buscarRoteirosPorFiscal";

	/**
	 * Query que busca roteiro pelo data início, data fim e rota versão.
	 */
	public static final String QUERY_BUSCA_ROTEIRO_PELAS_DATAS_E_ROTA_VERSAO = "buscaRoteiroPelasDatasERotaVersao";
	
	public static final String QUERY_BUSCA_ROTEIRO_POR_DATA_AUFERICAO = "buscarRoreiroPorDataAufericao";
	
	public static final String QUERY_BUSCAR_ROTEIRO_POR_ID_FISCAL_DATA_AUFERICAO = "buscarRoteiroPorIdFiscalEDataAufericao";
	
	  /**
     * Construtor com parâmetros.
     * 
     * @param rotaVersao
     * @param fiscal
     * @param dataInicial
     * @param dataFim
     * @param status
     */
    public Roteiro(RotaVersao rotaVersao, Fiscal fiscal, Date dataInicial, Date dataFim) {
        this.rotaVersao = rotaVersao;
        this.fiscal = fiscal;
        this.dataInicial = dataInicial;
        this.dataFim = dataFim;
    }
    
    public Roteiro() {}

	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "SQ_ROTEITRO")
	@Column(name = "SEQ_ROTEIRO")
	private Long id;
	
	@ManyToOne
	@JoinColumn(name = "SEQ_ROTA_VERSAO")
	private RotaVersao rotaVersao;
	
	@ManyToOne
	@JoinColumn(name = "SEQ_FISCAL")
	private Fiscal fiscal;
	
	@Column(name = "DAT_INI")
	@Temporal(TemporalType.TIMESTAMP)
	private Date dataInicial;
	
	@Column(name = "DAT_FIM")
	@Temporal(TemporalType.TIMESTAMP)
	private Date dataFim;
	
	/**
	 * @return the id
	 */
	public Long getId() {
		return id;
	}

	/**
	 * @param id 
	 * 				the id to set
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * @return the rotaVersao
	 */
	public RotaVersao getRotaVersao() {
		return rotaVersao;
	}

	/**
	 * @param rotaVersao 
	 * 				the rotaVersao to set
	 */
	public void setRotaVersao(RotaVersao rotaVersao) {
		this.rotaVersao = rotaVersao;
	}

	/**
	 * @return the fiscal
	 */
	public Fiscal getFiscal() {
		return fiscal;
	}

	/**
	 * @param fiscal 
	 * 				the fiscal to set
	 */
	public void setFiscal(Fiscal fiscal) {
		this.fiscal = fiscal;
	}

	/**
	 * @return the dataInicial
	 */
	public Date getDataInicial() {
		return dataInicial;
	}

	/**
	 * @param dataInicial 
	 * 				the dataInicial to set
	 */
	public void setDataInicial(Date dataInicial) {
		this.dataInicial = dataInicial;
	}

	/**
	 * @return the dataFim
	 */
	public Date getDataFim() {
		return dataFim;
	}

	/**
	 * @param dataFim 
	 * 				the dataFim to set
	 */
	public void setDataFim(Date dataFim) {
		this.dataFim = dataFim;
	}

	@Override
	public String toString() {
		return "Roteiro [id=" + id + ", rotaVersao=" + rotaVersao + ", fiscal="
				+ fiscal + ", dataInicial=" + dataInicial + ", dataFim="
				+ dataFim + "]";
	}

	/* (non-Javadoc)
     * @see java.lang.Object#hashCode()
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((id == null) ? 0 : id.hashCode());
        return result;
    }

    /* (non-Javadoc)
     * @see java.lang.Object#equals(java.lang.Object)
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        Roteiro other = (Roteiro) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        } else if (!id.equals(other.id))
            return false;
        return true;
    }
	
	
}