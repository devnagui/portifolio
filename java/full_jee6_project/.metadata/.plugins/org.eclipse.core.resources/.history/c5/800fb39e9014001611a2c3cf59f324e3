package br.gov.ce.sefaz.project.entities;

import java.io.Serializable;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

@Entity
@Table(name = "NOTA_FISCAL_ELETRONICA", schema = "PDM_NFECORP_2")
public class NotaFiscalEletronicaPDM implements Serializable {

    /**
     * Serial UID.
     */
    private static final long serialVersionUID = -1008964218389285524L;
    

    @Id
    @Column(name = "SEQ_NOTA_FISCAL", nullable = false)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "SQ_NOTA_FISCAL")
    @SequenceGenerator(name = "SQ_NOTA_FISCAL", sequenceName = "SQ_NOTA_FISCAL", allocationSize = 1, initialValue = 1, schema = "PDM_NFECORP_2")
    private Long id;

    @Column(name="COD_CHAVE_ACESSO",length=44,nullable=false)
    private String codAcesso;
   
    @Column(name="DAT_EMISSAO",nullable=false)
    private Date dataEmissao;
    
    @Column(name="NUM_CFOP",nullable=false)
    private Long cfop;
    
    @OneToMany(mappedBy="notaFiscalEletronica")
    private List<ItemNotaFiscalEletronicaPDM> itensDaNota;
    
    @ManyToOne
    @JoinColumn(name="SEQ_EMITENTE",nullable=false)
    private Emitente emitente;
    

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getCodAcesso() {
        return codAcesso;
    }

    public void setCodAcesso(String codAcesso) {
        this.codAcesso = codAcesso;
    }

    public Date getDataEmissao() {
        return dataEmissao;
    }

    public void setDataEmissao(Date dataEmissao) {
        this.dataEmissao = dataEmissao;
    }
    
    public Long getCfop() {
        return cfop;
    }

    public void setCfop(Long cfop) {
        this.cfop = cfop;
    }

    public List<ItemNotaFiscalEletronicaPDM> getItensDaNota() {
        return itensDaNota;
    }

    public void setItensDaNota(List<ItemNotaFiscalEletronicaPDM> itensDaNota) {
        this.itensDaNota = itensDaNota;
    }

    public Emitente getEmitente() {
        return emitente;
    }

    public void setEmitente(Emitente emitente) {
        this.emitente = emitente;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((codAcesso == null) ? 0 : codAcesso.hashCode());
        result = prime * result + ((id == null) ? 0 : id.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        NotaFiscalEletronicaPDM other = (NotaFiscalEletronicaPDM) obj;
        if (codAcesso == null) {
            if (other.codAcesso != null)
                return false;
        } else if (!codAcesso.equals(other.codAcesso))
            return false;
        if (id == null) {
            if (other.id != null)
                return false;
        } else if (!id.equals(other.id))
            return false;
        return true;
    }
    
}
