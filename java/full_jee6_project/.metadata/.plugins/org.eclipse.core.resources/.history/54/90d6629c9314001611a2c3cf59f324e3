package br.com.devnagui.project.webservices.consultanfe.adapter;

import java.io.Serializable;

import br.com.devnagui.project.entities.ItemNFEEntrada;
import br.com.devnagui.project.entities.ProdutoCombustivel;
import br.com.devnagui.project.enums.SituacaoRegistroItem;
import br.com.devnagui.nfecorp.ws.consultas.nfe.Produto;


/**
 * Objeto utilizado como interface para acesso as informa��es dos itens da nota
 * fiscal segundo o modelo de dados do webservice da NFeCorp. Tamb�m funciona
 * como um decorator, adicionando caracteristicas de controle visual e l�gico
 * para o neg�cio.
 * 
 * @author 006157C6
 * 
 */
public class ItemNFEAdapter implements Serializable {

    /**
     * Serial UID.
     */
    private static final long serialVersionUID = -3084057889429023462L;
    private Produto itemDaNFE;
    private boolean itemUsado;
    private boolean itemEscolhido;
    private ProdutoCombustivel produtoCombustivel;

    private String descricaoItem;
    private Integer numeroItem;
    private Long quantidade;
    private Double valorTotal;
    private Double valorUnitario;
    private Double valorICMS;
    private Integer CFOP;
    private Integer situacaoItem;
    private String descSituacaoItem;
    private boolean alterar;
    private boolean itemSeleciodado;
    private Integer numItemAnterior;
    private String chaveNFE;
    
    public ItemNFEAdapter(Produto itemDaNFE) {
        super();
        this.itemDaNFE = itemDaNFE;
        numeroItem = itemDaNFE.getProdutoPK().getNumeroItem();
        descricaoItem = itemDaNFE.getDescricao();
        quantidade = itemDaNFE.getQuantidade().longValue();
        valorTotal = itemDaNFE.getValorBruto();
        valorUnitario = itemDaNFE.getValorUnitario();
        valorICMS = itemDaNFE.getIcms().getValorIcms();
        CFOP = itemDaNFE.getCfop();
        chaveNFE= itemDaNFE.getNfe().getChaveAcesso();
        descSituacaoItem = "Importado da NFECORP";
    }
    
    public ItemNFEAdapter(ItemNFEEntrada itemNFEEntrada) {
        super();
        numeroItem = itemNFEEntrada.getNumItemNFE().intValue();
        quantidade = itemNFEEntrada.getQtdEntrada();
        situacaoItem = itemNFEEntrada.getSituacaoItem().ordinal();
        chaveNFE = itemNFEEntrada.getNotaFiscal().getCodAcesso();
		if (situacaoItem == 0) {
			descSituacaoItem = "Informado Manualmente";
		} else {
			descSituacaoItem = "Importado da NFECORP";
		}
    }

    public ItemNFEAdapter() {
    }
    

    public Integer getNumeroItem() {
        return numeroItem;
    }

    public String getDescricaoItem() {
        return descricaoItem;
    }

    public Long getQuantidade() {
        return quantidade;
    }

    public Double getValorTotal() {
        return valorTotal;

    }

    public Double getValorICMS() {
        return valorICMS;
    }
    
    public Double getValorUnitario(){
        return valorUnitario;
    }
    
    public Integer getCFOP(){
        return CFOP;
    }

	/**
	 * @return the itemUsado
	 */
	public Boolean getItemUsado() {
		return itemUsado;
	}

	/**
	 * @param itemUsado 
	 * 				the itemUsado to set
	 */
	public void setItemUsado(Boolean itemUsado) {
		this.itemUsado = itemUsado;
	}

	/**
	 * @return the produtoCombustivel
	 */
	public ProdutoCombustivel getProdutoCombustivel() {
		return produtoCombustivel;
	}

	/**
	 * @param produtoCombustivel 
	 * 				the produtoCombustivel to set
	 */
	public void setProdutoCombustivel(ProdutoCombustivel produtoCombustivel) {
		this.produtoCombustivel = produtoCombustivel;
	}

    public Boolean getItemEscolhido() {
        return itemEscolhido;
    }

    public void setItemEscolhido(Boolean itemEscolhido) {
        this.itemEscolhido = itemEscolhido;
    }
    
    public void setNumeroItem(Integer numeroItem) {
        this.numeroItem = numeroItem;
    }

    public void setQuantidade(Long quantidade) {
        this.quantidade = quantidade;
    }
    
    /**
	 * @return the situacaoItem
	 */
	public Integer getSituacaoItem() {
		return situacaoItem;
	}

	/**
	 * @param situacaoItem 
	 * 				the situacaoItem to set
	 */
	public void setSituacaoItem(SituacaoRegistroItem situacaoItem) {
		this.situacaoItem = situacaoItem.ordinal();
	}
	
	

	/**
	 * @return the descSituacaoItem
	 */
	public String getDescSituacaoItem() {
		return descSituacaoItem;
	}

	/**
	 * @param descSituacaoItem 
	 * 				the descSituacaoItem to set
	 */
	public void setDescSituacaoItem(String descSituacaoItem) {
		this.descSituacaoItem = descSituacaoItem;
	}
	
	/**
	 * @return the alterar
	 */
	public boolean isAlterar() {
		return alterar;
	}

	/**
	 * @param alterar 
	 * 				the alterar to set
	 */
	public void setAlterar(boolean alterar) {
		this.alterar = alterar;
	}

	/**
	 * @return the itemSeleciodado
	 */
	public boolean isItemSeleciodado() {
		return itemSeleciodado;
	}

	/**
	 * @param itemSeleciodado 
	 * 				the itemSeleciodado to set
	 */
	public void setItemSeleciodado(boolean itemSeleciodado) {
		this.itemSeleciodado = itemSeleciodado;
	}

	@Override
    public String toString() {
        return "ItemNFEAdapter [itemUsado=" + itemUsado + ", itemEscolhido=" + itemEscolhido + ", produtoCombustivel=" + produtoCombustivel
                + ", descricaoItem=" + descricaoItem + ", numeroItem=" + numeroItem + ", quantidade=" + quantidade + ", valorTotal=" + valorTotal
                + ", valorUnitario=" + valorUnitario + ", valorICMS=" + valorICMS + ", CFOP=" + CFOP + "]";
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((itemDaNFE == null) ? 0 : itemDaNFE.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (!(obj instanceof ItemNFEAdapter))
            return false;
        ItemNFEAdapter other = (ItemNFEAdapter) obj;
        if (itemDaNFE == null) {
            if (other.itemDaNFE != null)
                return false;
        } else if (!itemDaNFE.equals(other.itemDaNFE))
            return false;
        return true;
    }

	/**
	 * @return the numItemAnterior
	 */
	public Integer getNumItemAnterior() {
		return numItemAnterior;
	}

	/**
	 * @param numItemAnterior 
	 * 				the numItemAnterior to set
	 */
	public void setNumItemAnterior(Integer numItemAnterior) {
		this.numItemAnterior = numItemAnterior;
	}

    public String getChaveNFE() {
        return chaveNFE;
    }

    public void setChaveNFE(String chaveNFE) {
        this.chaveNFE = chaveNFE;
    }
}
